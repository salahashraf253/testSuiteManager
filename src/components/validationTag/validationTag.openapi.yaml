paths:
  /validationTags/testSuites/{testSuiteId}:
    post:                 
      tags:            
        - ValidationTag
      summary: Creates a new validation tag linked to a test suite
      produces:
        - application/json
      parameters:    
        - name: testSuiteId
          in: path
          description: ID of the test suite that the created validation tag will be linked to
          required: true
          schema:
            type: string
      requestBody:
        description: 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/validationTag'
     
      responses:      
        201:
          description: Validation tag on a test suite is created successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagOnTestSuite'
        400:
          description: Path parameter `testSuiteId` is not a valid ID
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagErrorResponse'

  /validationTags/testSuites/{testSuiteId}/testCases/{testCaseId}:
    post:                 
      tags:            
        - ValidationTag
      summary: Creates a new validation tag linked to a test case
      produces:
        - application/json
      parameters:    
        - name: testCaseId
          in: path
          description: ID of the test case that the created validation tag will be linked to
          required: true
          schema:
            type: string
        - name: testSuiteId
          in: path
          description: ID of the test suite that `testCaseId` belongs to
          required: true
          schema:
            type: string
      requestBody:
        description: 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/validationTag'
     
      responses:      
        201:
          description: Validation tag on a test case is created successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagOnTestCase'
        400:
          description: 1. Path parameter `testSuiteId` is not a valid ID<br>2. Path parameter `testCaseId` is not a valid ID<br>3. `testCaseId` does not belong to `testSuiteId`
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagErrorResponse'

  /validationTags/{validationTagId}:
    get:                 
      tags:            
        - ValidationTag
      summary: Fetches a validation tag by its ID
      produces:
        - application/json
      parameters:    
        - name: validationTagId
          in: path
          description: ID of the validation tag to be fetched
          required: true
          schema:
            type: string
     
      responses:      
        200:
          description: Validation tag with `validationTagId` is fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagGetResponse'
        404:
          description: Validation tag with `validationTagId` does not exist
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagErrorResponse'
  
    patch:
      tags:
        - ValidationTag        
      summary: Updates a validation tag by its ID
      produces:
      - application/json
      parameters:    
      - in: path
        name: validationTagId
        description: Id of validation tag to be updated
        required: True
        schema:
          type: string
      requestBody:          
        description: Enables updating validation tag details
        required: True
        content:
          application/json:
            schema:          
              $ref: '#/definitions/validationTagUpdateRequest' 

      responses:      
        200:
          description: Validation tag with `validationTagId` is updated successfully (returns updated validation tag)
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagUpdateResponse'
        404:
          description: Validation tag with `validationTagId` does not exist
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagErrorResponse'


  
  /validationTags:
    get:                 
      tags:            
        - ValidationTag
      summary: Fetches all validation tags with optional query parameters (filters)
      produces:
        - application/json
      parameters:    
        - in: query
          name: limit
          schema: 
            type: integer
          description: limit number of entities
        - in: query
          name: skip
          description: skip number of entities
          schema: 
            type: integer
        - in: query
          name: isSuccessful
          schema: 
            type: boolean
        - in: query
          name: validationPoint
          schema:
            type: object
            properties:
              validationPoint:
                type: object
      responses:      
        200:
          description: Validation tags are fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagsGetResponse'
        400:
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagErrorResponse'
  
  /validationTags/testCases:
    get:                 
      tags:            
        - ValidationTag
      summary: Fetches validation tags that are linked to test cases only
      produces:
        - application/json
      parameters:    
        - in: query
          name: limit
          schema: 
            type: integer
          description: limit number of entities
        - in: query
          name: skip
          description: skip number of entities
          schema: 
            type: integer
        - in: query
          name: isSuccessful
          schema: 
            type: boolean
        - in: query
          name: testSuite.id
          description: ID of the test suite that the validation tag belongs to as a grandparent
          schema:
            type: string
        - in: query
          name: testCase.id
          description: ID of the test case that the validation tag is linked to as a parent
          schema:
            type: string
        - in: query
          name: validationPoint
          schema:
            type: object
            properties:
              validationPoint:
                type: object
      responses:      
        200:
          description: Validation tags are fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagsGetResponse'
        400:
          description: 1. `testSuiteId` is not a valid ID<br>2. `testCaseId` is not a valid ID<br>3. `testCaseId` is not linked to `testSuiteId`<br>4. Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagErrorResponse'
    
  /validationTags/testSuites:
    get:                 
      tags:            
        - ValidationTag
      summary: Fetches validation tags that are linked to test suites only
      produces:
        - application/json
      parameters:    
        - in: query
          name: limit
          schema: 
            type: integer
          description: limit number of entities
        - in: query
          name: skip
          description: skip number of entities
          schema: 
            type: integer
        - in: query
          name: isSuccessful
          schema: 
            type: boolean
        - in: query
          name: testSuite.id
          description: ID of the test suite that the validation tag is linked to as a parent
          schema:
            type: string
        - in: query
          name: validationPoint
          schema:
            type: object
            properties:
              validationPoint:
                type: object
      responses:      
        200:
          description: Validation tags are fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagsGetResponseForTestSuites'
        400:
          description: 1. `testSuiteId` is not a valid ID<br>2. Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/definitions/validationTagErrorResponse'
  

definitions: # Schema defination for request body
  validationTag:
    type: object
    properties:
      isSuccessful:
        type: boolean
        example: true
      metaData:
        type: object

  validationTagOnTestSuite:
    type: object
    properties:
      id: 
        type: string
        example: 507f1f77bcf86cd799439011
      isSuccessful:
        type: boolean
        example: true
      metaData:
        type: object
      parent: 
        type: object
        properties:
          testSuite:
            type: object
            properties:
              id:
                type: string
                example: 507f1f77bcf86cd799439011
                
  validationTagOnTestCase:
    type: object
    properties:
      id: 
        type: string
        example: 507f1f77bcf86cd799439011
      isSuccessful:
        type: boolean
        example: true
      metaData:
        type: object
      parent: 
        type: object
        properties:
          testCase:
            type: object
            properties:
              id:
                type: string
                example: 50879873145dfbqe4f5f4f5f
          testSuite:
            type: object
            properties:
              id:
                type: string
                example: 507f1f77bcf86cd799439011

  validationTagGetResponse:
    type: object
    properties:
      id: 
        type: string
        example: 507f1f77bcf86cd799439011
      isSuccessful:
        type: boolean
        example: true
      metaData:
        type: object
      parent: 
        type: object
        properties:
          testCase:
            type: object
            properties:
              id:
                type: string
                example: 50879873145dfbqe4f5f4f5f
          testSuite:
            type: object
            properties:
              id:
                type: string
                example: 507f1f77bcf86cd799439011
      validationPoints:
        type: array
        items:
          $ref: '#/definitions/validationPointAsChild'
  
  validationTagGetResponseForTestSuites:
    type: object
    properties:
      id: 
        type: string
        example: 507f1f77bcf86cd799439011
      isSuccessful:
        type: boolean
        example: true
      metaData:
        type: object
      parent: 
        type: object
        properties:
          testSuite:
            type: object
            properties:
              id:
                type: string
                example: 507f1f77bcf86cd799439011
      validationPoints:
        type: array
        items:
          $ref: '#/definitions/validationPointAsChild'

  
  validationTagsGetResponse:
    type: array
    items:
      $ref: '#/definitions/validationTagGetResponse'
  
  validationTagsGetResponseForTestSuites:
    type: array
    items:
      $ref: '#/definitions/validationTagGetResponseForTestSuites'


  validationTagErrorResponse:
    type: object
    properties:
      message:
        type: string
        example: error message
  
  
  validationPointAsChild:
    type: object
    properties:
      id: 
        type: string
        example: 507f1f77bcf86cd799439011
      type: 
        type: string
        example: "DUT"
      metaData: 
        type: object
      # parent:
      #   type: object
      #   properties:
      #     validationTag:
      #       type: object
      #       properties:
      #         id:
      #           type: string
      #           example: 1321fdsafdsafdsafdsafdsa
      #     testCase:
      #       type: object
      #       properties:
      #         id:
      #           type: string
      #           example: 121qfvasdfasdfasdfasdf
      #     testSuite:
      #       type: object
      #       properties:
      #         id:
      #           type: string
      #           example: 2225659qafksj6556adfasdf
      body:
        type: object
    
  validationTagUpdateRequest:
    type: object
    properties:
      isSuccessful:
        type: boolean
        example: true

  validationTagUpdateResponse:
    type: object
    properties:
      id: 
        type: string
        example: 507f1f77bcf86cd799439011
      isSuccessful:
        type: boolean
        example: true
      metaData:
        type: object
      parent: 
        type: object
        properties:
          testCase:
            type: object
            properties:
              id:
                type: string
                example: 50879873145dfbqe4f5f4f5f
          testSuite:
            type: object
            properties:
              id:
                type: string
                example: 507f1f77bcf86cd799439011
      validationPointRefs:
        type: array
        items:
          type: string
          example: 163f1f77bcf86cd799479054
          
      
      